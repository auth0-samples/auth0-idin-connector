<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BankId.Merchant.Library</name>
    </assembly>
    <members>
        <member name="T:BankId.Merchant.Library.AssuranceLevel">
            <summary>
            Describes the minimum level of assurance required
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.AssuranceLevel.Loa2">
            <summary>
            nl:bvn:bankid:1.0:loa2
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.AssuranceLevel.Loa3">
            <summary>
            nl:bvn:bankid:1.0:loa3
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.BaseResponse.IsError">
            <summary>
            true if an error occured, or false when no errors were encountered
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.BaseResponse.Error">
            <summary>
            Object that holds the error if one occurs; when there are no errors, this is set to null
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.BaseResponse.RawMessage">
            <summary>
            The response XML as received
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.CommunicatorException">
            <summary>
            Base exception used by the Communicator class
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.CommunicatorException.#ctor">
            <summary>
            Constructor without parameters
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.CommunicatorException.#ctor(System.String)">
            <summary>
            Constructor that sets exception message
            </summary>
            <param name="message">The message to set</param>
        </member>
        <member name="M:BankId.Merchant.Library.CommunicatorException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor that sets exception message and the InnerException
            </summary>
            <param name="message">The message to set</param>
            <param name="inner">The inner exception</param>
        </member>
        <member name="T:BankId.Merchant.Library.AdvancedConfiguration.Logger">
            <summary>
            The default logger used by the library
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.AdvancedConfiguration.Logger.Log(System.String,System.Object[])">
            <summary>
            Logs a trace message to System.Debug.Trace.
            </summary>
            <param name="message"></param>
            <param name="args"></param>
        </member>
        <member name="M:BankId.Merchant.Library.AdvancedConfiguration.Logger.LogXmlMessage(System.String)">
            <summary>
            Logs a request/response xml message to the directory specified in the configuration.
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.Configuration">
            <summary>
            Configuration class
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.Instance">
            <summary>
            Gets the active Configuration instance
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.#ctor(System.String,System.String,System.Uri,System.Uri,System.Uri,System.Uri,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Creates a configuration instance
            </summary>
            <param name="acquirerId">Acquirer ID</param>
            <param name="merchantId">ID of the Merchant</param>
            <param name="merchantReturnUrl">The merchant return URL to be used after successfull authentication</param>
            <param name="acquirerDirectoryUrl">The AcquirerDirectoryURL that the library will use to perform the DirectoryRequest</param>
            <param name="acquirerTransactionUrl">The AcquirerTransactionURL that the library will use to start a new authentication></param>
            <param name="acquirerStatusUrl">The AcquirerStatusURL that the library will use to get the status of an authentication</param>
            <param name="merchantCertificateFingerprint">The fingerprint of the merchant certificate</param>
            <param name="routingServiceCertificateFingerprint">The fingerprint of the Routing Service certificate</param>
            <param name="samlCertificateFingerprint">The fingerprint of the SAML certificate</param>
            <param name="serviceLogsLocation">Location of the service logs folder. The library will attempt to write service logs in the specified folder if service logs are enabled</param>
            <param name="serviceLogsEnabled">True if service logs are enabled, False otherwise</param>
            <param name="serviceLogsPattern">Pattern to be used when generating service logs files</param>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.#ctor(System.String,System.String,System.Uri,System.Uri,System.Uri,System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean,System.String)">
            <summary>
            Creates a configuration instance
            </summary>
            <param name="acquirerId">Acquirer ID</param>
            <param name="merchantId">ID of the Merchant</param>
            <param name="merchantReturnUrl">The merchant return URL to be used after successfull authentication</param>
            <param name="acquirerDirectoryUrl">The AcquirerDirectoryURL that the library will use to perform the DirectoryRequest</param>
            <param name="acquirerTransactionUrl">The AcquirerTransactionURL that the library will use to start a new authentication></param>
            <param name="acquirerStatusUrl">The AcquirerStatusURL that the library will use to get the status of an authentication</param>
            <param name="merchantCertificate">The merchant certificate</param>
            <param name="routingServiceCertificate">The Routing Service certificate</param>
            <param name="samlCertificate">The fingerprint of the SAML certificate</param>
            <param name="serviceLogsLocation">Location of the service logs folder. The library will attempt to write service logs in the specified folder if service logs are enabled</param>
            <param name="serviceLogsEnabled">True if service logs are enabled, False otherwise</param>
            <param name="serviceLogsPattern">Pattern to be used when generating service logs files</param>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.#ctor(System.String,System.String,System.UInt32,System.Uri,System.Uri,System.Uri,System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean,System.String)">
            <summary>
            Creates a configuration instance
            </summary>
            <param name="acquirerId">Acquirer ID</param>
            <param name="merchantId">ID of the Merchant</param>
            <param name="merchantSubId">The SubID that uniquely defines a trade name of the Merchant to be used for display</param>
            <param name="merchantReturnUrl">The merchant return URL to be used after successfull authentication</param>
            <param name="acquirerDirectoryUrl">The AcquirerDirectoryURL that the library will use to perform the DirectoryRequest</param>
            <param name="acquirerTransactionUrl">The AcquirerTransactionURL that the library will use to start a new authentication></param>
            <param name="acquirerStatusUrl">The AcquirerStatusURL that the library will use to get the status of an authentication</param>
            <param name="merchantCertificate">The merchant certificate</param>
            <param name="routingServiceCertificate">The Routing Service certificate</param>
            <param name="samlCertificate">The fingerprint of the SAML certificate</param>
            <param name="serviceLogsLocation">Location of the service logs folder. The library will attempt to write service logs in the specified folder if service logs are enabled</param>
            <param name="serviceLogsEnabled">True if service logs are enabled, False otherwise</param>
            <param name="serviceLogsPattern">Pattern to be used when generating service logs files</param>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.#ctor(System.String,System.String,System.UInt32,System.Uri,System.Uri,System.Uri,System.Uri,System.String,System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Creates a configuration instance
            </summary>
            <param name="acquirerId">Acquirer ID</param>
            <param name="merchantId">ID of the Merchant</param>
            <param name="merchantSubId">The SubID that uniquely defines a trade name of the Merchant to be used for display</param>
            <param name="merchantReturnUrl">The merchant return URL to be used after successfull authentication</param>
            <param name="acquirerDirectoryUrl">The AcquirerDirectoryURL that the library will use to perform the DirectoryRequest</param>
            <param name="acquirerTransactionUrl">The AcquirerTransactionURL that the library will use to start a new authentication></param>
            <param name="acquirerStatusUrl">The AcquirerStatusURL that the library will use to get the status of an authentication</param>
            <param name="merchantCertificateFingerprint">The fingerprint of the merchant certificate</param>
            <param name="routingServiceCertificateFingerprint">The fingerprint of the Routing Service certificate</param>
            <param name="samlCertificateFingerprint">The fingerprint of the SAML certificate</param>
            <param name="serviceLogsLocation">Location of the service logs folder. The library will attempt to write service logs in the specified folder if service logs are enabled</param>
            <param name="serviceLogsEnabled">True if service logs are enabled, False otherwise</param>
            <param name="serviceLogsPattern">Pattern to be used when generating service logs files</param>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.#ctor(System.String,System.String,System.UInt32,System.Uri,System.Uri,System.Uri,System.Uri,System.String,System.Boolean,System.String)">
            <summary>
            
            </summary>
            <param name="acquirerId">Acquirer ID</param>
            <param name="merchantId">ID of the Merchant</param>
            <param name="merchantSubId">The SubID that uniquely defines a trade name of the Merchant to be used for display</param>
            <param name="merchantReturnUrl">The merchant return URL to be used after successfull authentication</param>
            <param name="acquirerDirectoryUrl">The AcquirerDirectoryURL that the library will use to perform the DirectoryRequest</param>
            <param name="acquirerTransactionUrl">The AcquirerTransactionURL that the library will use to start a new authentication></param>
            <param name="acquirerStatusUrl">The AcquirerStatusURL that the library will use to get the status of an authentication</param>
            <param name="serviceLogsLocation">Location of the service logs folder. The library will attempt to write service logs in the specified folder if service logs are enabled</param>
            <param name="serviceLogsEnabled">True if service logs are enabled, False otherwise</param>
            <param name="serviceLogsPattern">Pattern to be used when generating service logs files</param>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.Setup(BankId.Merchant.Library.IConfiguration)">
            <summary>
            Sets the Configuration object to be used by Communicator instances
            </summary>
            <param name="configuration">The object implementing IConfiguration to use</param>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.Load">
            <summary>
            Attempts to load the settings from the application's configuration
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.EnsureIsValid(BankId.Merchant.Library.IConfiguration)">
            <summary>
            Ensures that the configuration is valid.
            </summary>
            <param name="config"></param>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.AcquirerId">
            <summary>
            Acquirer ID
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.MerchantId">
            <summary>
            Merchant Id
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.MerchantSubId">
            <summary>
            BankID contract registration number sub of the Merchant. The SubID that uniquely defines a trade name of the Merchant to be used for display.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.MerchantReturnUrl">
            <summary>
            A valid URL to which the Consumer is redirected to after authentication
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.AcquirerDirectoryUrl">
            <summary>
            The URL to which the library sends GetDirectory request messages
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.AcquirerTransactionUrl">
            <summary>
            The URL to which the library sends authentication request messages
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.AcquirerStatusUrl">
            <summary>
            The URL to which the library sends Status request messages
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.ServiceLogsLocation">
            <summary>
            A directory on the disk where the library saves ISO pain raw messages.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.ServiceLogsEnabled">
            <summary>
            This tells the library that it should save ISO pain raw messages or not. Default is true.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.ServiceLogsPattern">
            <summary>
            A string that describes a pattern to distinguish the ISO pain raw messages. For example,
            %Y-%M-%D\%h%m%s.%f-%a.xml -> 102045.924-AcquirerTrxReq.xml
            </summary>
            <remarks>
            %Y = current year
            %M = current month
            %D = current day
            %h = current hour
            %m = current minute
            %s = current second
            %f = current millisecond
            %a = current action
            </remarks>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.MerchantCertificateFingerprint">
            <summary>
            A string which specifies the fingerprint of the certificate to use to sign messages to the Routing Service.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.RoutingServiceCertificateFingerprint">
            <summary>
            A string which specifies the fingerprint of the certificate to use to validate messages from the Routing Service.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.SamlCertificateFingerprint">
            <summary>
            A string which specifies the fingerprint of the certificate necesary to decrypt the SAML request - may be identical to the Merchant Certificate
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.MerchantCertificate">
            <summary>
            You may overwrite the signing certificate (which was loaded using MerchantCertificateFingerprint), if you want
            to load it using a different method.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.RoutingServiceCertificate">
            <summary>
            You may overwrite the acquirer certificate (which was loaded using RoutingServiceCertificateFingerprint), if you want
            to load it using a different method.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Configuration.SamlCertificate">
            <summary>
             You may overwrite the SAML certificate (which was loaded using SamlCertificateFingerprint), if you want
            to load it using a different method.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.GetLogger">
            <summary>
            Gets the default Logger instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:BankId.Merchant.Library.Configuration.GetMessenger">
            <summary>
            Gets the default Messenger instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:BankId.Merchant.Library.Issuer">
            <summary>
            An Issuer contained in a directory response
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Issuer.Country">
            <summary>
            Country name
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Issuer.Id">
            <summary>
            BIC
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.Issuer.Name">
            <summary>
            Bank name
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.SamlStatus">
            <summary>
            Class responsible for handling Saml Statuses
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlStatus.Success">
            <summary>
            Status Success
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlStatus.Requester">
            <summary>
            Status Requester
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlStatus.RequestDenied">
            <summary>
            Status RequestDenied
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlStatus.RequestUnsupported">
            <summary>
            Status RequestUnsupported
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlStatus.InvalidAttrNameOrValue">
            <summary>
            Status InvalidAttrNameOrValue
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlStatus.MismatchWithIDx">
            <summary>
            Status MismatchWithIDx
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlStatus.StatusMessage">
            <summary>
            The status message
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlStatus.StatusCodeFirstLevel">
            <summary>
            The status code first level
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlStatus.StatusCodeSecondLevel">
            <summary>
            The status code second level
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.SamlStatus.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor used to create Saml Status objects
            </summary>
            <param name="statusMessage">The status message</param>
            <param name="statusCodeFirstLevel">The status code first level</param>
            <param name="statusCodeSecondLevel">The status code second level</param>
        </member>
        <member name="M:BankId.Merchant.Library.Security.BankIdSignature.TryVerifyElement(System.String,System.String,System.String,System.Boolean@)">
            <summary>
            Tries to verify the specified XML text signature.
            </summary>
            <param name="xmlText">The XML text.</param>
            <param name="elementName">The name of the element signature to be verified.</param>
            <param name="elementNamespace">The namespace of the element signature to be verified.</param>
            <param name="isValidSignature">True if the signature is valid and placed properly, false otherwise.</param>
            <returns>True if the verifying was possible, false otherwise.</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Security.IXmlSecurity">
            <summary>
            IXmlSecurity interface: utility methods on XML files
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Security.IXmlSecurity.AddSignature(System.String)">
            <summary>
            Sign the xml passed as a parameter using the certificate in Configuration.SigningCertificate
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Security.IXmlSecurity.VerifySignature(System.String)">
            <summary>
            Verify the signature of an xml
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Security.IXmlSecurity.VerifySchema(System.String)">
            <summary>
            Verify that the xml is correct according to the XSDs
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.Security.RSAPKCS1SHA256SignatureDescription">
            <summary>
            Not to be used outside the library, this class and methods need to be public as mandated by the framework
                <para>
                    The RSAPKCS1SHA256SignatureDescription class provides a signature description implementation
                    for RSA-SHA256 signatures. It allows XML digital signatures to be produced using the
                    http://www.w3.org/2001/04/xmldsig-more#rsa-sha256 signature type.
                    RSAPKCS1SHA256SignatureDescription provides the same interface as other signature description
                    implementations shipped with the .NET Framework, such as
                    <see cref="T:System.Security.Cryptography.RSAPKCS1SHA1SignatureDescription" />.
                </para>
                <para>
                    RSAPKCS1SHA256SignatureDescription is not generally intended for use on its own, instead it
                    should be consumed by higher level cryptography services such as the XML digital signature
                    stack. It can be registered in <see cref="T:System.Security.Cryptography.CryptoConfig" /> so that these services can create
                    instances of this signature description and use RSA-SHA256 signatures.
                </para>
                <para>
                    Registration in CryptoConfig requires editing the machine.config file found in the .NET
                    Framework installation's configuration directory (such as
                    %WINDIR%\Microsoft.NET\Framework\v2.0.50727\Config or
                    %WINDIR%\Microsoft.NET\Framework64\v2.0.50727\Config) to include registration information on
                    the type. For example:
                </para>
                <example>
                    <![CDATA[
                        <configuration>
                          <mscorlib>
                            <!-- ... -->
                            <cryptographySettings>
                              <cryptoNameMapping>
                                <cryptoClasses>
                                  <cryptoClass RSASHA256SignatureDescription="Security.Cryptography.RSAPKCS1SHA256SignatureDescription, Security.Cryptography, Version=1.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
                                </cryptoClasses>
                                <nameEntry name="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256" class="RSASHA256SignatureDescription" />
                              </cryptoNameMapping>
                            </cryptographySettings>
                          </mscorlib>
                        </configuration>
                    ]]>
                </example>
                <para>
                    After adding this registration entry, the assembly which contains the
                    RSAPKCS1SHA256SignatureDescription (in the example above Security.Cryptography.dll) needs to
                    be added to the GAC.
               </para>
               <para>
                    Note that on 64 bit machines, both the Framework and Framework64 machine.config files should
                    be updated, and if the signature description assembly is built bit-specific it needs to be
                    added to both the 32 and 64 bit GACs.
                </para>
                <para>
                    RSA-SHA256 signatures are first available on the .NET Framework 3.5 SP 1 and as such the
                    RSAPKCS1SHA256SignatureDescription requires .NET 3.5 SP 1 and Windows Server 2003 or greater
                    to work properly.
                </para>
                <para>
                    On Windows 2003, the default OID registrations are not setup for the SHA2 family of hash
                    algorithms, and this can cause the .NET Framework v3.5 SP 1 to be unable to create RSA-SHA2
                    signatures. To fix this problem, the Oid2.RegisterSha2OidInformationForRsa
                    method can be called to create the necessary OID registrations.
                </para>
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Security.RSAPKCS1SHA256SignatureDescription.#ctor">
            <summary>
                Construct an RSAPKCS1SHA256SignatureDescription object. The default settings for this object
                are:
                <list type="bullet">
                    <item>Digest algorithm - <see cref="T:System.Security.Cryptography.SHA256Managed" /></item>
                    <item>Key algorithm - <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /></item>
                    <item>Formatter algorithm - <see cref="T:System.Security.Cryptography.RSAPKCS1SignatureFormatter" /></item>
                    <item>Deformatter algorithm - <see cref="T:System.Security.Cryptography.RSAPKCS1SignatureDeformatter" /></item>
                </list>
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Security.RSAPKCS1SHA256SignatureDescription.CreateDeformatter(System.Security.Cryptography.AsymmetricAlgorithm)">
            <summary>
            Not to be used outside the library, this class and methods need to be public as mandated by the framework
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Security.RSAPKCS1SHA256SignatureDescription.CreateFormatter(System.Security.Cryptography.AsymmetricAlgorithm)">
            <summary>
            Not to be used outside the library, this class and methods need to be public as mandated by the framework
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.Security.XmlSignature.AlgorithmsRegexEnvelopedSignature">
            <summary>
            The algorithm elements to be verified into a signature.
            Note that also namespace prefixes are taken into account.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Security.XmlSignature.Sign(System.Xml.XmlDocument@,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Xml.XmlElement,System.String,System.Boolean)">
            <summary>
            Signs a document.
            </summary>
            <param name="doc">The Xml document. It will be modified to contain the signature generated</param>
            <param name="certificate">The certificate to use for signing</param>
            <param name="signatureContainer">The xml element inside of which the signature will be added</param>
            <param name="dsPrefix">In case the 'dsPrefix' is sent, the generated signature element will contain this prefix;
            e.g if 'ds' is sent, the element will look like this: &lt;ds:Signature xmlns:ds="http://www.w3.org/2000/09/xmldsig#" &gt;...</param>       
            <param name="useFingerprint">If true the public key of the certificate will be replaced with the fingerprint in the signature</param>
            <returns>The Signature element</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Security.XmlSignature.CheckSignature(System.Xml.XmlDocument,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Xml.XmlElement)">
             <summary>
             Verifies the specified XML document signature.
             </summary>
             <param name="xmlDocument">The XML document.</param>
             <param name="certificate">The certificate.</param>
             <param name="signEl">The signature element.</param>
            <returns>True if the signature is valid and placed properly, false otherwise</returns>
        </member>
        <member name="T:BankId.Merchant.Library.IConfiguration">
            <summary>
            Interface that describes the configuration settings for the library, which are tied with each ICommunicator instance:
            when you instantiate a Communicator object, it attempts to load its configuration using App.config or Web.config.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.AcquirerId">
            <summary>
            Acquirer ID
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.MerchantId">
            <summary>
            Merchant Id
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.MerchantSubId">
            <summary>
            BankID contract registration number sub of the Merchant. The SubID that uniquely defines a trade name of the Merchant to be used for display.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.MerchantReturnUrl">
            <summary>
            A valid URL to which the Consumer is redirected after successfull authentication.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.MerchantCertificateFingerprint">
            <summary>
            A string which specifies the fingerprint of the certificate to use to sign messages to the Routing Service.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.RoutingServiceCertificateFingerprint">
            <summary>
            A string which specifies the fingerprint of the certificate to use to validate messages from the Routing Service.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.SamlCertificateFingerprint">
            <summary>
            A string which specifies the fingerprint of the certificate necesary to decrypt the SAML request - may be identical to the Merchant Certificate
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.SamlCertificate">
            <summary>
            You may overwrite the SAML certificate (which was loaded using SamlCertificateFingerprint), if you want
            to load it using a different method.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.MerchantCertificate">
            <summary>
            You may overwrite the signing certificate (which was loaded using MerchantCertificateFingerprint), if you want
            to load it using a different method.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.RoutingServiceCertificate">
            <summary>
            You may overwrite the acquirer certificate (which was loaded using RoutingServiceCertificateFingerprint), if you want
            to load it using a different method.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.AcquirerDirectoryUrl">
            <summary>
            The URL to which the library sends GetDirectory request messages
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.AcquirerTransactionUrl">
            <summary>
            The URL to which the library sends authentication request messages
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.AcquirerStatusUrl">
            <summary>
            The URL to which the library sends Status request messages
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.ServiceLogsEnabled">
            <summary>
            This tells the library that it should save ISO pain raw messages or not. Default is true.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.ServiceLogsLocation">
            <summary>
            A directory on the disk where the library saves ISO pain raw messages.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.IConfiguration.ServiceLogsPattern">
            <summary>
            A string that describes a pattern to distinguish the ISO pain raw messages. For example,
            %Y-%M-%D\%h%m%s.%f-%a.xml -> 102045.924-AcquirerTrxReq.xml
            </summary>
            <remarks>
            %Y = current year
            %M = current month
            %D = current day
            %h = current hour
            %m = current minute
            %s = current second
            %f = current millisecond
            %a = current action
            </remarks>
        </member>
        <member name="M:BankId.Merchant.Library.IConfiguration.GetLogger">
            <summary>
            Gets the default Logger instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:BankId.Merchant.Library.IConfiguration.GetMessenger">
            <summary>
            Gets the default Messenger instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:BankId.Merchant.Library.ILogger">
            <summary>
            ILogger interface: defines methods for logging messages and debug output
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.ILogger.Log(System.String,System.Object[])">
            <summary>
            Logs a trace message.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.ILogger.LogXmlMessage(System.String)">
            <summary>
            Logs a request/response xml message.
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.IMessenger">
            <summary>
            IMessenger interface, implemented by <see cref="T:BankId.Merchant.Library.Messenger"/>.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.IMessenger.SendMessage(System.String,System.Uri)">
            <summary>
            Sends the specified message to the given url
            </summary>
            <param name="message">Message to be sent</param>
            <param name="url">Url to send the message</param>
            <returns></returns>
        </member>
        <member name="T:BankId.Merchant.Library.SamlAttribute">
            <summary>
            Class responsible for handling Saml Attributes
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.DeliveredServiceID">
            <summary>
            Get the delivered service id (can be the same as RequestedServiceID, a different number, or 0) 
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerBin">
            <summary>
            Get the BIN(Bank Identifying Number) 
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerTransientID">
            <summary>
            Get the Consumer TransientID
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerGender">
            <summary>
            Get the Consumer gender
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerLegalLastName">
            <summary>
            Get the Consumer legal last name 
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerPrefLastName">
            <summary>
            Get the Consumer preferred last name
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerPartnerLastName">
            <summary>
            Get the Consumer's registered partner last name (analogous to legal last name)
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerLegalLastNamePrefix">
            <summary>
            Get the last name prefix of Consumer's legal last name
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerPrefLastNamePrefix">
            <summary>
            Get the last name prefix of Consumer preferred last name (analogous to legal last name prefix)
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerInitials">
            <summary>
            Get the initials of the Consumer
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerDateOfBirth">
            <summary>
            Get the date of birth of the Consumer
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerStreet">
            <summary>
            Get the street name of the Consumer's residential address
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerHouseNo">
            <summary>
            Get the house number of the Consumer's residential address
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerHouseNoSuf">
            <summary>
            Get the house number suffix of the Consumer's residential address. Used for NL addresses only
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerAddressExtra">
            <summary>
            Get additional address details of Consumer's residential address. Used for NL addresses only
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerPostalCode">
            <summary>
            Get the postal code of the Consumer's residential address
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerCity">
            <summary>
            Get the city of the Customer's residential address
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerCountry">
            <summary>
            Get the country code of the country where the Consumer resides
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerDeprecatedBin">
            <summary>
            Get the Deprecated BIN
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerFirstName">
            <summary>
            Get the first name of the Consumer
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerIban">
            <summary>
            Get the IBAN of the Consumer
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlAttribute.ConsumerIs18OrOlder">
            <summary>
            Get the value specifing if the Consumer is 18 or older
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlAttribute.Name">
            <summary>
            Name of the Saml Attribute
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlAttribute.Value">
            <summary>
            Value of the Saml Attribute
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.SamlResponse">
            <summary>
            Class responsible for handling Saml Responses
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlResponse.TransactionId">
            <summary>
            The Transaction ID
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlResponse.MerchantReference">
            <summary>
            Unique transaction reference fron the Merchant
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlResponse.Version">
            <summary>
            The SAML Version
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlResponse.CreateDateTimestamp">
            <summary>
            Represents the current time at which this SAML Response message is created.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlResponse.AcquirerId">
            <summary>
            The Acquirer ID
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlResponse.AttributeStatements">
            <summary>
            The SAML Attributes required by the merchant
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.SamlResponse.Status">
            <summary>
            Details of the SAML status.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.SamlResponse.GetAttributeValue(System.String)">
            <summary>
            Gets attribute value for the specified name.
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:BankId.Merchant.Library.SamlResponseStatus">
            <summary>
            Enumeration of possible Saml Response Status
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlResponseStatus.Success">
            <summary>
            SAML: The request succeeded
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlResponseStatus.Requester">
            <summary>
            SAML: The request could not be performed due to an error on the part of the requester.
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlResponseStatus.Responder">
            <summary>
            SAML: The request could not be performed due to an error on the part of the SAML responder or SAML authority.
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.SamlResponseStatus.AuthenticationFailed">
            <summary>
            SAML: The responding provider was unable to successfully authenticate the principal.
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.ServiceIds">
            <summary>
            Enumeration used to indicate the purpose of the authentication and/or the attributes requested
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.None">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.ConsumerTransientId">
            <summary>
            The Consumer Transient Id
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.ConsumerBin">
            <summary>
            The Consumer BIN
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.Name">
            <summary>
            The Consumer Name
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.Address">
            <summary>
            The Consumer Address
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.DateOfBirth">
            <summary>
            The Consumer's date of birth
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.IsEighteenOrOlder">
            <summary>
            The value specifying if the Consumer is 18 or older
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.Gender">
            <summary>
            Provide Gender attribute
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.ServiceIds.BSN">
            <summary>
            Provide BSN attribute
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.AuthenticationRequest">
            <summary>
            Describes a new authentication request
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.AuthenticationRequest.#ctor(System.String,BankId.Merchant.Library.ServiceIds,System.String,System.String,BankId.Merchant.Library.AssuranceLevel,System.Nullable{System.TimeSpan},System.String)">
            <summary>
            Constructor that highlights all required fields for this object; use this one to specify your own messageId
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.EntranceCode">
            <summary>
            An 'authentication identifier' to facilitate continuation of the session even if the existing session has been lost.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.MerchantReference">
            <summary>
            This field is the unique authentication reference from the Merchant.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.Language">
            <summary>
            This field enables the Issuers's site to select the Consumer's preferred language (e.g. the language selected on the Merchant's site),
            if the Issuers's site supports this: Dutch = 'nl', English = 'en'.
            Language used by Consumer formatted like ISO 639-1. 
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.ExpirationPeriod">
            <summary>
            Optional: The period of validity of the authentication request
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.RequestedServiceId">
            <summary>
            This field specifies what attributes the Merchant would like to have a look at.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.IssuerId">
            <summary>
            BIC of the Issuer
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.AssuranceLevel">
            <summary>
            This fiels specified the level of assurance for authentication of Consumer.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationRequest.CreateDateTimestamp">
            <summary>
            Represents the current time at which this authentication message is created.
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.AuthenticationResponse">
            <summary>
            Describes a new authentication response
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationResponse.IssuerAuthenticationUrl">
            <summary>
            The URL to redirect the Consumer for authentication
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationResponse.TransactionId">
            <summary>
            The transaction ID
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.AuthenticationResponse.TransactionCreateDateTimestamp">
            <summary>
            DateTime set to when this transaction was created
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.Communicator">
            <summary>
            Class responsible for communicating with the services.
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.Communicator._logger">
            <summary>
            ILogger instance, to be used for logging messages.
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.Communicator._messenger">
            <summary>
            IMessebger instance, to be used for sending messages to external URIs
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.Communicator._xmlSecurity">
            <summary>
            XmlSecurity instance, used to process XMLs (signing, verifying, validating signature)
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.#ctor">
            <summary>
            Creates a new Communicator instance
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.Sign(System.String)">
            <summary>
            Sign a message using Configuration.Instance.SigningCertificate
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.VerifySignature(System.String)">
            <summary>
            Verify an incoming message's signature using Configuration.Instance.AcquirerCertificate
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.VerifySchema(System.String)">
            <summary>
            Verify that a message is correct according to the XML schemas
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.PerformRequest(System.String,System.Uri)">
            <summary>
            Perform the http(s) request and return the result
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.GetDirectory">
            <summary>
                Sends a directory request to the URL specified in Configuration.AcquirerUrl_DirectoryReq
            </summary>
            <returns>
                A DirectoryResponse object which contains the response from the server (a list of Issuers), or error information when an error occurs
            </returns>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.NewAuthenticationRequest(BankId.Merchant.Library.AuthenticationRequest)">
            <summary>
                Sends a new authentication request to the URL specified in Configuration.AcquirerUrl_TransactionReq
            </summary>
            <param name="authenticationRequest">An AuthenticationRequest object</param>
            <returns>
                An AuthenticationResponse object which contains the response from the server (transaction id, issuer authentication URL), or error information when an error occurs
            </returns>
        </member>
        <member name="M:BankId.Merchant.Library.Communicator.GetResponse(BankId.Merchant.Library.StatusRequest)">
            <summary>
                Sends a transaction status request to the URL specified in Configuration.AcquirerUrl_TransactionReq
            </summary>
            <param name="statusRequest">A StatusRequest object</param>
            <returns>
                A StatusResponse object which contains the response from the server (transaction id, status message), or error information when an error occurs
            </returns>
        </member>
        <member name="T:BankId.Merchant.Library.ICommunicator">
            <summary>
            ICommunicator interface, implemented by <see cref="T:BankId.Merchant.Library.Communicator"/>.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.ICommunicator.GetDirectory">
            <summary>
                Sends a directory request
            </summary>
            <returns>
                A DirectoryResponse object which contains the response from the server (a list of Issuers), or error information when an error occurs
            </returns>
        </member>
        <member name="M:BankId.Merchant.Library.ICommunicator.NewAuthenticationRequest(BankId.Merchant.Library.AuthenticationRequest)">
            <summary>
                Sends a transaction request
            </summary>
            <param name="authenticationRequest">An AuthenticationRequest object</param>
            <returns>
                An AuthenticationResponse object which contains the response from the server (transaction id, issuer authentication URL), or error information when an error occurs
            </returns>
        </member>
        <member name="M:BankId.Merchant.Library.ICommunicator.GetResponse(BankId.Merchant.Library.StatusRequest)">
            <summary>
                Sends a transaction status request to the URL specified in Configuration.AcquirerUrl_TransactionReq
            </summary>
            <param name="statusRequest">A StatusRequest object</param>
            <returns>
                A StatusResponse object which contains the response from the server (transaction id, status message), or error information when an error occurs
            </returns>
        </member>
        <member name="T:BankId.Merchant.Library.DirectoryResponse">
            <summary>
            Describes a directory response
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.DirectoryResponse.DirectoryDateTimestamp">
            <summary>
            DateTime set to when this directory was last updated
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.DirectoryResponse.Issuers">
            <summary>
            List of available Issuers
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.ErrorResponse">
            <summary>
            Describes an error response
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.ErrorResponse.ErrorCode">
            <summary>
            Unique identification of the error occurring within the iDx transaction
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.ErrorResponse.ErrorMessage">
            <summary>
            Descriptive text accompanying Error.errorCode
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.ErrorResponse.ErrorDetails">
            <summary>
            Details of the error
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.ErrorResponse.SuggestedAction">
            <summary>
            Suggestions aimed at resolving the problem
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.ErrorResponse.ConsumerMessage">
            <summary>
            A (standardised) message that the merchant should show to the consumer
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.ErrorResponse.AdditionalInformation">
            <summary>
            Details of the SAML status.
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.ErrorResponse.Exception">
            <summary>
            Details of the exception occurred during the processing of request/response.
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.StatusRequest">
            <summary>
            Describes a status request
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.StatusRequest.#ctor">
            <summary>
            Parameterless constructor, so it can be used as a Model in views
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.StatusRequest.#ctor(System.String)">
            <summary>
            Constructor that highlights all required fields for this object
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.StatusRequest.TransactionId">
            <summary>
            The transaction ID to check
            </summary>
        </member>
        <member name="T:BankId.Merchant.Library.StatusResponse">
            <summary>
            Represents a status response
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.StatusResponse.Open">
            <summary>
            Status Open
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.StatusResponse.Pending">
            <summary>
            Status Pending
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.StatusResponse.Success">
            <summary>
            Status Success
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.StatusResponse.Failure">
            <summary>
            Status Failure
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.StatusResponse.Expired">
            <summary>
            Status Expired
            </summary>
        </member>
        <member name="F:BankId.Merchant.Library.StatusResponse.Cancelled">
            <summary>
            Status Cancelled
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.StatusResponse.TransactionId">
            <summary>
            The transaction ID
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.StatusResponse.Status">
            <summary>
            Possible values: Open, Pending, Success, Failure, Expired, Cancelled
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.StatusResponse.StatusDateTimestamp">
            <summary>
            DateTime when the status was created, or null if no such date available
            </summary>
        </member>
        <member name="P:BankId.Merchant.Library.StatusResponse.SamlResponse">
            <summary>
            The SAML report returned in the status response
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.BaseIDAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current BaseIDAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.BaseIDAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.BaseIDAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an BaseIDAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output BaseIDAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.NameIDType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current NameIDType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.NameIDType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.NameIDType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an NameIDType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output NameIDType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedElementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedElementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedElementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedElementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedElementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedElementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.RSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.RSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.RSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.PGPDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PGPDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.PGPDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.PGPDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PGPDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PGPDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType1.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType1.PGPKeyID">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType1.PGPKeyPacket">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.RetrievalMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RetrievalMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.RetrievalMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.RetrievalMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RetrievalMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RetrievalMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.TransformType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.TransformType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.TransformType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SPKIDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SPKIDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SPKIDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SPKIDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SPKIDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SPKIDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.X509DataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509DataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.X509DataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.X509DataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509DataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509DataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.X509IssuerSerialType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509IssuerSerialType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.X509IssuerSerialType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.X509IssuerSerialType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509IssuerSerialType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509IssuerSerialType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType.X509CRL">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType.X509Certificate">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType.X509IssuerSerial">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType.X509SKI">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType.X509SubjectName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.KeyName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.KeyValue">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.MgmtData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.PGPData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.RetrievalMethod">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.SPKIData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType2.X509Data">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CipherDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CipherDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CipherDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CipherDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CipherDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CipherDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CipherReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CipherReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CipherReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CipherReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CipherReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CipherReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.TransformsType1.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformsType1 object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.TransformsType1.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.TransformsType1@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformsType1 object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformsType1 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionPropertiesType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionPropertiesType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionPropertiesType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionPropertiesType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionPropertiesType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionPropertiesType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionPropertyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionPropertyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionPropertyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptionPropertyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionPropertyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionPropertyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedKeyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedKeyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedKeyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EncryptedKeyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedKeyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedKeyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceList.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceList object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceList.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceList@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceList object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceList object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType3.DataReference">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType3.KeyReference">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AssertionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AssertionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AssertionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AssertionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AssertionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AssertionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignedInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignedInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignedInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignedInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignedInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignedInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CanonicalizationMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CanonicalizationMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CanonicalizationMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.CanonicalizationMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CanonicalizationMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CanonicalizationMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceType1.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceType1 object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceType1.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ReferenceType1@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceType1 object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceType1 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DigestMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DigestMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DigestMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DigestMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DigestMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DigestMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SignatureValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ObjectType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ObjectType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ObjectType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ObjectType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ObjectType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ObjectType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectConfirmationType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectConfirmationType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectConfirmationType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectConfirmationType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectConfirmationType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectConfirmationType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectConfirmationDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectConfirmationDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectConfirmationDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectConfirmationDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectConfirmationDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectConfirmationDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyInfoConfirmationDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyInfoConfirmationDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyInfoConfirmationDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.KeyInfoConfirmationDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyInfoConfirmationDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyInfoConfirmationDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ConditionsType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ConditionsType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ConditionsType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ConditionsType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ConditionsType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ConditionsType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AudienceRestrictionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AudienceRestrictionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AudienceRestrictionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AudienceRestrictionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AudienceRestrictionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AudienceRestrictionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ConditionAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ConditionAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ConditionAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ConditionAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ConditionAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ConditionAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ProxyRestrictionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ProxyRestrictionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ProxyRestrictionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ProxyRestrictionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ProxyRestrictionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ProxyRestrictionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.OneTimeUseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current OneTimeUseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.OneTimeUseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.OneTimeUseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an OneTimeUseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output OneTimeUseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AdviceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AdviceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AdviceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AdviceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AdviceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AdviceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType4.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType4.Assertion">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType4.AssertionIDRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType4.AssertionURIRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType4.EncryptedAssertion">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AttributeStatementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeStatementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AttributeStatementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AttributeStatementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeStatementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeStatementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AttributeType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AttributeType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AttributeType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.StatementAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current StatementAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.StatementAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.StatementAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an StatementAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output StatementAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthzDecisionStatementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthzDecisionStatementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthzDecisionStatementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthzDecisionStatementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthzDecisionStatementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthzDecisionStatementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ActionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ActionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ActionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ActionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ActionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ActionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EvidenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EvidenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EvidenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.EvidenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EvidenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EvidenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType6.Assertion">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType6.AssertionIDRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType6.AssertionURIRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType6.EncryptedAssertion">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DecisionType.Permit">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DecisionType.Deny">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.DecisionType.Indeterminate">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthnStatementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnStatementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthnStatementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthnStatementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnStatementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnStatementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectLocalityType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectLocalityType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectLocalityType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.SubjectLocalityType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectLocalityType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectLocalityType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthnContextType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnContextType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthnContextType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.AuthnContextType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnContextType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnContextType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType5.AuthnContextClassRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType5.AuthnContextDecl">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Assertion.ItemsChoiceType5.AuthnContextDeclRef">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthnContextDeclarationBaseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnContextDeclarationBaseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthnContextDeclarationBaseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthnContextDeclarationBaseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnContextDeclarationBaseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnContextDeclarationBaseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.IdentificationType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current IdentificationType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.IdentificationType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.IdentificationType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an IdentificationType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output IdentificationType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PhysicalVerification">
            <summary>
            This element indicates that identification has been
            performed in a physical
            face-to-face meeting with the principal and not in an
            online manner.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PhysicalVerification.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PhysicalVerification object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PhysicalVerification.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PhysicalVerification@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PhysicalVerification object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PhysicalVerification object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PhysicalVerificationCredentialLevel.primary">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PhysicalVerificationCredentialLevel.secondary">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthenticatorTransportProtocolType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthenticatorTransportProtocolType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthenticatorTransportProtocolType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthenticatorTransportProtocolType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthenticatorTransportProtocolType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthenticatorTransportProtocolType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ExtensionOnlyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ExtensionOnlyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ExtensionOnlyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ExtensionOnlyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ExtensionOnlyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ExtensionOnlyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ExtensionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ExtensionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ExtensionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ExtensionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ExtensionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ExtensionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.ADSL">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.HTTP">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.IPSec">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.ISDN">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.MobileNetworkEndToEndEncryption">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.MobileNetworkNoEncryption">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.MobileNetworkRadioEncryption">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.PSTN">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.SSL">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ItemChoiceType.WTLS">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SharedSecretChallengeResponseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SharedSecretChallengeResponseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SharedSecretChallengeResponseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SharedSecretChallengeResponseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SharedSecretChallengeResponseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SharedSecretChallengeResponseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PublicKeyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PublicKeyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PublicKeyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PublicKeyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PublicKeyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PublicKeyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthenticatorBaseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthenticatorBaseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthenticatorBaseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthenticatorBaseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthenticatorBaseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthenticatorBaseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PasswordType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PasswordType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PasswordType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PasswordType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PasswordType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PasswordType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.LengthType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current LengthType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.LengthType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.LengthType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an LengthType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output LengthType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.RestrictedLengthType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RestrictedLengthType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.RestrictedLengthType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.RestrictedLengthType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RestrictedLengthType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RestrictedLengthType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AlphabetType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AlphabetType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AlphabetType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AlphabetType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AlphabetType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AlphabetType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.Generation">
            <summary>
            Indicates whether the password was chosen by the
            Principal or auto-supplied by the Authentication Authority.
            principalchosen - the Principal is allowed to choose
            the value of the password. This is true even if
            the initial password is chosen at random by the UA or
            the IdP and the Principal is then free to change
            the password.
            automatic - the password is chosen by the UA or the
            IdP to be cryptographically strong in some sense,
            or to satisfy certain password rules, and that the
            Principal is not free to change it or to choose a new password.
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.Generation.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current Generation object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.Generation.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.Generation@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Generation object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Generation object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GenerationMechanism.principalchosen">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GenerationMechanism.automatic">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.RestrictedPasswordType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RestrictedPasswordType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.RestrictedPasswordType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.RestrictedPasswordType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RestrictedPasswordType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RestrictedPasswordType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TimeSyncTokenType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TimeSyncTokenType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TimeSyncTokenType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TimeSyncTokenType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TimeSyncTokenType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TimeSyncTokenType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.DeviceTypeType.hardware">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.DeviceTypeType.software">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.booleanType.true">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.booleanType.false">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TokenType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TokenType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TokenType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TokenType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TokenType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TokenType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PrincipalAuthenticationMechanismType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PrincipalAuthenticationMechanismType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PrincipalAuthenticationMechanismType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PrincipalAuthenticationMechanismType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PrincipalAuthenticationMechanismType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PrincipalAuthenticationMechanismType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationPinType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ActivationPinType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationPinType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationPinType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ActivationPinType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ActivationPinType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ActivationLimitType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ActivationLimitType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ActivationLimitType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitDurationType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ActivationLimitDurationType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitDurationType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitDurationType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ActivationLimitDurationType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ActivationLimitDurationType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitSessionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ActivationLimitSessionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitSessionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitSessionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ActivationLimitSessionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ActivationLimitSessionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitUsagesType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ActivationLimitUsagesType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitUsagesType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ActivationLimitUsagesType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ActivationLimitUsagesType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ActivationLimitUsagesType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthnMethodBaseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnMethodBaseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthnMethodBaseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.AuthnMethodBaseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnMethodBaseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnMethodBaseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SecurityAuditType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SecurityAuditType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SecurityAuditType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SecurityAuditType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SecurityAuditType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SecurityAuditType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.OperationalProtectionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current OperationalProtectionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.OperationalProtectionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.OperationalProtectionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an OperationalProtectionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output OperationalProtectionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SecretKeyProtectionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SecretKeyProtectionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SecretKeyProtectionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.SecretKeyProtectionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SecretKeyProtectionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SecretKeyProtectionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeyActivationType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyActivationType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeyActivationType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeyActivationType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyActivationType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyActivationType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeyStorageType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyStorageType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeyStorageType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeyStorageType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyStorageType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyStorageType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.mediumType.memory">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.mediumType.smartcard">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.mediumType.token">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.mediumType.MobileDevice">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.mediumType.MobileAuthCard">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeySharingType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeySharingType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeySharingType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.KeySharingType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeySharingType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeySharingType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PrivateKeyProtectionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PrivateKeyProtectionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PrivateKeyProtectionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.PrivateKeyProtectionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PrivateKeyProtectionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PrivateKeyProtectionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TechnicalProtectionBaseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TechnicalProtectionBaseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TechnicalProtectionBaseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.TechnicalProtectionBaseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TechnicalProtectionBaseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TechnicalProtectionBaseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GoverningAgreementRefType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current GoverningAgreementRefType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GoverningAgreementRefType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GoverningAgreementRefType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an GoverningAgreementRefType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output GoverningAgreementRefType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.nymType.anonymity">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.nymType.verinymity">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.nymType.pseudonymity">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ComplexAuthenticatorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ComplexAuthenticatorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ComplexAuthenticatorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.ComplexAuthenticatorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ComplexAuthenticatorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ComplexAuthenticatorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GoverningAgreementsType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current GoverningAgreementsType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GoverningAgreementsType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.AuthContext.GoverningAgreementsType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an GoverningAgreementsType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output GoverningAgreementsType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ExtensionsType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ExtensionsType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ExtensionsType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ExtensionsType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ExtensionsType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ExtensionsType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EntitiesDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EntitiesDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EntitiesDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EntitiesDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EntitiesDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EntitiesDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignedInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignedInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignedInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignedInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignedInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignedInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.CanonicalizationMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CanonicalizationMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.CanonicalizationMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.CanonicalizationMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CanonicalizationMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CanonicalizationMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.TransformType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.TransformType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.TransformType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.DigestMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DigestMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.DigestMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.DigestMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DigestMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DigestMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SignatureValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.DSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.DSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.DSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.PGPDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PGPDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.PGPDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.PGPDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PGPDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PGPDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType1.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType1.PGPKeyID">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType1.PGPKeyPacket">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RetrievalMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RetrievalMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RetrievalMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RetrievalMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RetrievalMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RetrievalMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SPKIDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SPKIDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SPKIDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SPKIDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SPKIDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SPKIDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.X509DataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509DataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.X509DataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.X509DataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509DataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509DataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.X509IssuerSerialType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509IssuerSerialType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.X509IssuerSerialType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.X509IssuerSerialType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509IssuerSerialType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509IssuerSerialType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType.X509CRL">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType.X509Certificate">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType.X509IssuerSerial">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType.X509SKI">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType.X509SubjectName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.KeyName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.KeyValue">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.MgmtData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.PGPData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.RetrievalMethod">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.SPKIData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ItemsChoiceType2.X509Data">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ObjectType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ObjectType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ObjectType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ObjectType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ObjectType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ObjectType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EntityDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EntityDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EntityDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EntityDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EntityDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EntityDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AffiliationDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AffiliationDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AffiliationDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AffiliationDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AffiliationDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AffiliationDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EncryptionMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EncryptionMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EncryptionMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyTypes.encryption">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.KeyTypes.signing">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeAuthorityDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeAuthorityDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeAuthorityDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeAuthorityDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeAuthorityDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeAuthorityDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EndpointType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EndpointType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EndpointType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.EndpointType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EndpointType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EndpointType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.IndexedEndpointType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current IndexedEndpointType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.IndexedEndpointType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.IndexedEndpointType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an IndexedEndpointType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output IndexedEndpointType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RequestedAttributeType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RequestedAttributeType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RequestedAttributeType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RequestedAttributeType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RequestedAttributeType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RequestedAttributeType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RoleDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RoleDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RoleDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.RoleDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RoleDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RoleDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.OrganizationType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current OrganizationType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.OrganizationType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.OrganizationType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an OrganizationType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output OrganizationType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.localizedNameType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current localizedNameType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.localizedNameType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.localizedNameType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an localizedNameType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output localizedNameType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.localizedURIType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current localizedURIType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.localizedURIType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.localizedURIType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an localizedURIType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output localizedURIType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ContactType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ContactType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ContactType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactTypeType.technical">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactTypeType.support">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactTypeType.administrative">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactTypeType.billing">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.ContactTypeType.other">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.PDPDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PDPDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.PDPDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.PDPDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PDPDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PDPDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AuthnAuthorityDescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnAuthorityDescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AuthnAuthorityDescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AuthnAuthorityDescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnAuthorityDescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnAuthorityDescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SSODescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SSODescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SSODescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SSODescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SSODescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SSODescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SPSSODescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SPSSODescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SPSSODescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.SPSSODescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SPSSODescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SPSSODescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeConsumingServiceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeConsumingServiceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeConsumingServiceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AttributeConsumingServiceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeConsumingServiceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeConsumingServiceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.IDPSSODescriptorType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current IDPSSODescriptorType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.IDPSSODescriptorType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.IDPSSODescriptorType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an IDPSSODescriptorType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output IDPSSODescriptorType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AdditionalMetadataLocationType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AdditionalMetadataLocationType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AdditionalMetadataLocationType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Metadata.AdditionalMetadataLocationType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AdditionalMetadataLocationType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AdditionalMetadataLocationType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ExtensionsType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ExtensionsType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ExtensionsType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ExtensionsType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ExtensionsType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ExtensionsType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current StatusType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an StatusType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output StatusType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusCodeType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current StatusCodeType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusCodeType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusCodeType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an StatusCodeType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output StatusCodeType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusDetailType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current StatusDetailType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusDetailType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusDetailType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an StatusDetailType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output StatusDetailType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AssertionIDRequestType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AssertionIDRequestType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AssertionIDRequestType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AssertionIDRequestType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AssertionIDRequestType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AssertionIDRequestType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RequestAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RequestAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RequestAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RequestAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RequestAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RequestAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current NameIDType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an NameIDType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output NameIDType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignedInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignedInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignedInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignedInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignedInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignedInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CanonicalizationMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CanonicalizationMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CanonicalizationMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CanonicalizationMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CanonicalizationMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CanonicalizationMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TransformType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TransformType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TransformType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DigestMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DigestMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DigestMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DigestMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DigestMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DigestMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SignatureValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.PGPDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PGPDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.PGPDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.PGPDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PGPDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PGPDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType1.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType1.PGPKeyID">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType1.PGPKeyPacket">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RetrievalMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RetrievalMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RetrievalMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RetrievalMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RetrievalMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RetrievalMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SPKIDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SPKIDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SPKIDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SPKIDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SPKIDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SPKIDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.X509DataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509DataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.X509DataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.X509DataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509DataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509DataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.X509IssuerSerialType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509IssuerSerialType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.X509IssuerSerialType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.X509IssuerSerialType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509IssuerSerialType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509IssuerSerialType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType.X509CRL">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType.X509Certificate">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType.X509IssuerSerial">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType.X509SKI">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType.X509SubjectName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.KeyName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.KeyValue">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.MgmtData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.PGPData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.RetrievalMethod">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.SPKIData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType2.X509Data">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ObjectType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ObjectType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ObjectType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ObjectType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ObjectType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ObjectType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDMappingRequestType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current NameIDMappingRequestType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDMappingRequestType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDMappingRequestType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an NameIDMappingRequestType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output NameIDMappingRequestType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.BaseIDAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current BaseIDAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.BaseIDAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.BaseIDAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an BaseIDAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output BaseIDAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedElementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedElementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedElementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedElementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedElementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedElementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CipherDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CipherDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CipherDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CipherDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CipherDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CipherDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CipherReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CipherReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CipherReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.CipherReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CipherReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CipherReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TransformsType1.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformsType1 object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TransformsType1.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TransformsType1@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformsType1 object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformsType1 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionPropertiesType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionPropertiesType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionPropertiesType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionPropertiesType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionPropertiesType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionPropertiesType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionPropertyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionPropertyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionPropertyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptionPropertyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionPropertyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionPropertyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedKeyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedKeyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedKeyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EncryptedKeyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedKeyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedKeyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceList.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceList object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceList.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceList@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceList object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceList object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceType1.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceType1 object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceType1.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ReferenceType1@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceType1 object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceType1 object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType3.DataReference">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType3.KeyReference">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDPolicyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current NameIDPolicyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDPolicyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDPolicyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an NameIDPolicyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output NameIDPolicyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.LogoutRequestType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current LogoutRequestType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.LogoutRequestType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.LogoutRequestType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an LogoutRequestType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output LogoutRequestType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ManageNameIDRequestType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ManageNameIDRequestType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ManageNameIDRequestType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ManageNameIDRequestType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ManageNameIDRequestType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ManageNameIDRequestType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TerminateType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TerminateType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TerminateType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.TerminateType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TerminateType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TerminateType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ArtifactResolveType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ArtifactResolveType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ArtifactResolveType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ArtifactResolveType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ArtifactResolveType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ArtifactResolveType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnRequestType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnRequestType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnRequestType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnRequestType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnRequestType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnRequestType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectConfirmationType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectConfirmationType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectConfirmationType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectConfirmationType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectConfirmationType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectConfirmationType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectConfirmationDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectConfirmationDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectConfirmationDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectConfirmationDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectConfirmationDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectConfirmationDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyInfoConfirmationDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyInfoConfirmationDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyInfoConfirmationDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.KeyInfoConfirmationDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyInfoConfirmationDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyInfoConfirmationDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ConditionsType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ConditionsType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ConditionsType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ConditionsType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ConditionsType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ConditionsType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AudienceRestrictionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AudienceRestrictionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AudienceRestrictionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AudienceRestrictionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AudienceRestrictionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AudienceRestrictionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ConditionAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ConditionAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ConditionAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ConditionAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ConditionAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ConditionAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ProxyRestrictionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ProxyRestrictionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ProxyRestrictionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ProxyRestrictionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ProxyRestrictionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ProxyRestrictionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.OneTimeUseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current OneTimeUseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.OneTimeUseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.OneTimeUseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an OneTimeUseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output OneTimeUseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RequestedAuthnContextType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RequestedAuthnContextType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RequestedAuthnContextType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.RequestedAuthnContextType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RequestedAuthnContextType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RequestedAuthnContextType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType7.AuthnContextClassRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType7.AuthnContextDeclRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnContextComparisonType.exact">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnContextComparisonType.minimum">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnContextComparisonType.maximum">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnContextComparisonType.better">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ScopingType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ScopingType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ScopingType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ScopingType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ScopingType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ScopingType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.IDPListType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current IDPListType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.IDPListType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.IDPListType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an IDPListType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output IDPListType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.IDPEntryType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current IDPEntryType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.IDPEntryType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.IDPEntryType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an IDPEntryType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output IDPEntryType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectQueryAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectQueryAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectQueryAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectQueryAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectQueryAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectQueryAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthzDecisionQueryType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthzDecisionQueryType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthzDecisionQueryType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthzDecisionQueryType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthzDecisionQueryType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthzDecisionQueryType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ActionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ActionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ActionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ActionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ActionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ActionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EvidenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EvidenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EvidenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.EvidenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EvidenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EvidenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AssertionType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AssertionType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AssertionType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AssertionType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AssertionType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AssertionType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AdviceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AdviceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AdviceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AdviceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AdviceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AdviceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType4.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType4.Assertion">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType4.AssertionIDRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType4.AssertionURIRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType4.EncryptedAssertion">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeStatementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeStatementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeStatementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeStatementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeStatementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeStatementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatementAbstractType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current StatementAbstractType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatementAbstractType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatementAbstractType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an StatementAbstractType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output StatementAbstractType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthzDecisionStatementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthzDecisionStatementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthzDecisionStatementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthzDecisionStatementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthzDecisionStatementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthzDecisionStatementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DecisionType.Permit">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DecisionType.Deny">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.DecisionType.Indeterminate">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnStatementType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnStatementType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnStatementType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnStatementType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnStatementType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnStatementType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectLocalityType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SubjectLocalityType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectLocalityType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.SubjectLocalityType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SubjectLocalityType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SubjectLocalityType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnContextType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnContextType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnContextType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnContextType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnContextType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnContextType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType5.AuthnContextClassRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType5.AuthnContextDecl">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType5.AuthnContextDeclRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType6.Assertion">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType6.AssertionIDRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType6.AssertionURIRef">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ItemsChoiceType6.EncryptedAssertion">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeQueryType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AttributeQueryType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeQueryType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AttributeQueryType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AttributeQueryType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AttributeQueryType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnQueryType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AuthnQueryType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnQueryType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.AuthnQueryType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AuthnQueryType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AuthnQueryType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ResponseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ResponseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ResponseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ResponseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ResponseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ResponseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusResponseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current StatusResponseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusResponseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.StatusResponseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an StatusResponseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output StatusResponseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDMappingResponseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current NameIDMappingResponseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDMappingResponseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.NameIDMappingResponseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an NameIDMappingResponseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output NameIDMappingResponseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ArtifactResponseType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ArtifactResponseType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ArtifactResponseType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.Protocol.ArtifactResponseType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ArtifactResponseType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ArtifactResponseType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.CipherDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CipherDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.CipherDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.CipherDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CipherDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CipherDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.CipherReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CipherReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.CipherReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.CipherReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CipherReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CipherReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.TransformsType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformsType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.TransformsType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.TransformsType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformsType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformsType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.TransformType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.TransformType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.TransformType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.KeyInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.KeyInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.KeyInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.KeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.KeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.KeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.DSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.DSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.DSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.RSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.RSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.RSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.PGPDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PGPDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.PGPDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.PGPDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PGPDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PGPDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType1.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType1.PGPKeyID">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType1.PGPKeyPacket">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.RetrievalMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RetrievalMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.RetrievalMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.RetrievalMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RetrievalMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RetrievalMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.SPKIDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SPKIDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.SPKIDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.SPKIDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SPKIDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SPKIDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.X509DataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509DataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.X509DataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.X509DataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509DataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509DataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.X509IssuerSerialType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509IssuerSerialType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.X509IssuerSerialType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.X509IssuerSerialType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509IssuerSerialType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509IssuerSerialType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType.X509CRL">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType.X509Certificate">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType.X509IssuerSerial">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType.X509SKI">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType.X509SubjectName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.KeyName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.KeyValue">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.MgmtData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.PGPData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.RetrievalMethod">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.SPKIData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType2.X509Data">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionPropertiesType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionPropertiesType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionPropertiesType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionPropertiesType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionPropertiesType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionPropertiesType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionPropertyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptionPropertyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionPropertyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptionPropertyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptionPropertyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptionPropertyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedKeyType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current EncryptedKeyType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedKeyType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.EncryptedKeyType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an EncryptedKeyType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output EncryptedKeyType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ReferenceList.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceList object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ReferenceList.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ReferenceList@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceList object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceList object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType3.DataReference">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.ItemsChoiceType3.KeyReference">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.AgreementMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AgreementMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.AgreementMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.Saml.XencSchema.AgreementMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AgreementMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AgreementMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryReq">
            <summary>
            Directory Request (A)
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryReq.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DirectoryReq object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryReq.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryReq@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DirectoryReq object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DirectoryReq object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryReqMerchant.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DirectoryReqMerchant object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryReqMerchant.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryReqMerchant@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DirectoryReqMerchant object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DirectoryReqMerchant object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.ObjectType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ObjectType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.ObjectType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.ObjectType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ObjectType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ObjectType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SPKIDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SPKIDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SPKIDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.SPKIDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SPKIDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SPKIDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.PGPDataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current PGPDataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.PGPDataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.PGPDataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an PGPDataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output PGPDataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType1.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType1.PGPKeyID">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType1.PGPKeyPacket">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.X509IssuerSerialType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509IssuerSerialType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.X509IssuerSerialType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.X509IssuerSerialType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509IssuerSerialType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509IssuerSerialType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.X509DataType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current X509DataType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.X509DataType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.X509DataType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an X509DataType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output X509DataType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType.X509CRL">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType.X509Certificate">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType.X509IssuerSerial">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType.X509SKI">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType.X509SubjectName">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.RetrievalMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RetrievalMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.RetrievalMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.RetrievalMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RetrievalMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RetrievalMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.TransformType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current TransformType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.TransformType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.TransformType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an TransformType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output TransformType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.RSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current RSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.RSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.RSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an RSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output RSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DSAKeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DSAKeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DSAKeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DSAKeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DSAKeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DSAKeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.KeyValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.KeyValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.KeyValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.KeyInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current KeyInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.KeyInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.KeyInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an KeyInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output KeyInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.Item">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.KeyName">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.KeyValue">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.MgmtData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.PGPData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.RetrievalMethod">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.SPKIData">
            <remarks/>
        </member>
        <member name="F:BankId.Merchant.Library.Xml.Schemas.iDx.ItemsChoiceType2.X509Data">
            <remarks/>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignatureValueType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureValueType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignatureValueType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.SignatureValueType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureValueType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureValueType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DigestMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DigestMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DigestMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DigestMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DigestMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DigestMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.ReferenceType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current ReferenceType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.ReferenceType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.ReferenceType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an ReferenceType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output ReferenceType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignatureMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignatureMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.SignatureMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.CanonicalizationMethodType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current CanonicalizationMethodType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.CanonicalizationMethodType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.CanonicalizationMethodType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an CanonicalizationMethodType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output CanonicalizationMethodType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignedInfoType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignedInfoType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignedInfoType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.SignedInfoType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignedInfoType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignedInfoType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignatureType.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current SignatureType object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.SignatureType.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.SignatureType@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an SignatureType object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output SignatureType object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryRes">
            <summary>
            Directory Response (A')
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryRes.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DirectoryRes object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryRes.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryRes@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DirectoryRes object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DirectoryRes object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResAcquirer.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DirectoryResAcquirer object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResAcquirer.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResAcquirer@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DirectoryResAcquirer object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DirectoryResAcquirer object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectory.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DirectoryResDirectory object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectory.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectory@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DirectoryResDirectory object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DirectoryResDirectory object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectoryCountry.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DirectoryResDirectoryCountry object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectoryCountry.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectoryCountry@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DirectoryResDirectoryCountry object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DirectoryResDirectoryCountry object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectoryCountryIssuer.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current DirectoryResDirectoryCountryIssuer object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectoryCountryIssuer.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.DirectoryResDirectoryCountryIssuer@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an DirectoryResDirectoryCountryIssuer object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output DirectoryResDirectoryCountryIssuer object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReq">
            <summary>
            Acquirer Transaction Request (B)
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReq.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxReq object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReq.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReq@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxReq object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxReq object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqIssuer.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxReqIssuer object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqIssuer.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqIssuer@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxReqIssuer object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxReqIssuer object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqMerchant.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxReqMerchant object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqMerchant.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqMerchant@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxReqMerchant object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxReqMerchant object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqTransaction.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxReqTransaction object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqTransaction.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxReqTransaction@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxReqTransaction object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxReqTransaction object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.Transactioncontainer.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current Transactioncontainer object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.Transactioncontainer.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.Transactioncontainer@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an Transactioncontainer object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output Transactioncontainer object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxRes">
            <summary>
            Acquirer Transaction Response (B')
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxRes.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxRes object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxRes.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxRes@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxRes object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxRes object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResAcquirer.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxResAcquirer object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResAcquirer.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResAcquirer@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxResAcquirer object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxResAcquirer object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResIssuer.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxResIssuer object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResIssuer.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResIssuer@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxResIssuer object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxResIssuer object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResTransaction.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerTrxResTransaction object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResTransaction.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerTrxResTransaction@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerTrxResTransaction object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerTrxResTransaction object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReq">
            <summary>
            Acquirer Status Request (F)
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReq.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerStatusReq object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReq.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReq@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerStatusReq object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerStatusReq object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReqMerchant.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerStatusReqMerchant object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReqMerchant.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReqMerchant@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerStatusReqMerchant object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerStatusReqMerchant object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReqTransaction.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerStatusReqTransaction object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReqTransaction.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusReqTransaction@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerStatusReqTransaction object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerStatusReqTransaction object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusRes">
            <summary>
            Acquirer Status Response (F')
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusRes.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerStatusRes object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusRes.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusRes@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerStatusRes object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerStatusRes object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusResAcquirer.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerStatusResAcquirer object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusResAcquirer.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusResAcquirer@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerStatusResAcquirer object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerStatusResAcquirer object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusResTransaction.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerStatusResTransaction object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusResTransaction.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerStatusResTransaction@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerStatusResTransaction object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerStatusResTransaction object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="T:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerErrorRes">
            <summary>
            Acquirer Error Response (X')
            </summary>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerErrorRes.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerErrorRes object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerErrorRes.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerErrorRes@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerErrorRes object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerErrorRes object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerErrorResError.Serialize(System.Text.Encoding)">
            <summary>
            Serializes current AcquirerErrorResError object into an XML document
            </summary>
            <returns>string XML value</returns>
        </member>
        <member name="M:BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerErrorResError.Deserialize(System.String,BankId.Merchant.Library.Xml.Schemas.iDx.AcquirerErrorResError@,System.Exception@)">
            <summary>
            Deserializes workflow markup into an AcquirerErrorResError object
            </summary>
            <param name="xml">string workflow markup to deserialize</param>
            <param name="obj">Output AcquirerErrorResError object</param>
            <param name="exception">output Exception value if deserialize failed</param>
            <returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        </member>
    </members>
</doc>
